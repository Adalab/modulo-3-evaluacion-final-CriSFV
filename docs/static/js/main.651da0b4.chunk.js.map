{"version":3,"sources":["services/api.js","images/logo.png","components/Header.js","components/FilterName.js","components/Card.js","images/triste.jpg","components/DoesNotExistCharacter.js","components/List.js","components/DoesNotExist.js","components/CardDetail.js","components/App.js","index.js"],"names":["callToApi","fetch","then","response","json","results","map","character","name","photo","image","species","id","origin","location","episodes","episode","length","status","Header","className","src","logo","alt","FilterName","props","type","placeholder","value","userSearch","onChange","ev","handleSearch","currentTarget","Cards","to","eachData","DoesNotExistCharacter","triste","onClick","preventDefault","window","reload","List","printList","data","Card","onSubmit","DoesNotExist","CardDetail","undefined","App","useState","setData","setUserSearch","useEffect","initialData","routeData","useRouteMatch","cardId","parseInt","params","selectCard","find","card","filteredList","filter","eachCharacter","toLocaleLowerCase","includes","sort","a","b","path","exact","dataSearch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.651da0b4.chunk.js","sourcesContent":["const callToApi = () => {\r\n  // Llamamos al API\r\n  return fetch(\r\n    'https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json'\r\n  )\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      return response.results.map((character) => {\r\n        return {\r\n          name: character.name,\r\n          photo: character.image,\r\n          species: character.species,\r\n          id: character.id,\r\n          origin: character.location.name,\r\n          episodes: character.episode.length,\r\n          status: character.status,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default callToApi;\r\n","export default __webpack_public_path__ + \"static/media/logo.de13d484.png\";","import '../styles/Header.scss';\r\nimport logo from '../images/logo.png';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className='header'>\r\n      <img src={logo} alt='Rick and Morty' className='header__img' />\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import '../styles/Filter.scss';\r\n\r\nconst FilterName = (props) => {\r\n  const inputValue = (ev) => {\r\n    props.handleSearch(ev.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type='text'\r\n      className='filter__input'\r\n      placeholder='busca aquí tu personaje'\r\n      value={props.userSearch}\r\n      onChange={inputValue}\r\n    />\r\n  );\r\n};\r\nexport default FilterName;\r\n","import { Link } from 'react-router-dom';\r\nconst Cards = (props) => {\r\n  return (\r\n    <>\r\n      <Link to={`/card/${props.eachData.id}`} className='character'>\r\n        <img\r\n          className='list__character__img'\r\n          src={props.eachData.photo}\r\n          alt={props.eachData.name}\r\n        />\r\n        <h4 className='list__character__name '>{props.eachData.name}</h4>\r\n        <p className='list__character__rest '>{props.eachData.species}</p>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\nexport default Cards;\r\n","export default __webpack_public_path__ + \"static/media/triste.39ad1b25.jpg\";","import triste from '../images/triste.jpg';\r\nimport '../styles/DoesNotExist.scss';\r\n\r\nconst DoesNotExistCharacter = () => {\r\n  const handleClickReload = (ev) => {\r\n    ev.preventDefault();\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className='sad'>\r\n        <p className='sad__text'>\r\n          ¡¿¡¿No ves que el personaje que estás buscando no existe?!?!\r\n        </p>\r\n\r\n        <img src={triste} alt='Triste' />\r\n\r\n        <button className='sad__button' onClick={handleClickReload}>\r\n          Volver\r\n        </button>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nexport default DoesNotExistCharacter;\r\n","import '../styles/List.scss';\r\nimport FilterName from './FilterName';\r\nimport Cards from './Card';\r\nimport DoesNotExistCharacter from './DoesNotExistCharacter';\r\n//import IsAlive from './FilterAlive';\r\n\r\nconst List = (props) => {\r\n  const hanlePrevent = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  const printList = () =>\r\n    props.data.map((eachData) => {\r\n      return (\r\n        <li className='list__character' key={eachData.id}>\r\n          <Cards eachData={eachData} />\r\n        </li>\r\n      );\r\n    });\r\n  if (props.data.length === 0) {\r\n    return <DoesNotExistCharacter />;\r\n  } else if (props.data.length > 0) {\r\n    props.data.map((eachData) => {\r\n      return printList();\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <form className='filter' onSubmit={hanlePrevent}>\r\n          <FilterName\r\n            handleSearch={props.handleSearch}\r\n            userSearch={props.userSearch}\r\n          />\r\n          {/* <IsAlive /> */}\r\n        </form>\r\n      </section>\r\n      <section>\r\n        <ul className='list'>{printList()}</ul>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import { Link } from 'react-router-dom';\r\nimport triste from '../images/triste.jpg';\r\nimport '../styles/DoesNotExist.scss';\r\nconst DoesNotExist = () => {\r\n  return (\r\n    <section className='sad'>\r\n      <p className='sad__text'>¡¿¡¿No ves que lo que buscas no existe?!?!</p>\r\n      <img src={triste} alt='Triste' />\r\n      <Link to='/' className='sad__button'>\r\n        Volver\r\n      </Link>\r\n    </section>\r\n  );\r\n};\r\nexport default DoesNotExist;\r\n","import { Link } from 'react-router-dom';\r\nimport '../styles/Card.scss';\r\nimport DoesNotExist from './DoesNotExist';\r\n\r\nconst CardDetail = (props) => {\r\n  const isAlive = () => {\r\n    if (props.data.status === 'Dead') {\r\n      return \"I'm dead\";\r\n    } else {\r\n      return \"I'm alive\";\r\n    }\r\n  }; // poner foto muerto/vivo\r\n\r\n  if (props.data === undefined) {\r\n    return <DoesNotExist />;\r\n  }\r\n  return (\r\n    <>\r\n      <div className='div'>\r\n        <section className='card'>\r\n          <img\r\n            className='list__character__img'\r\n            src={props.data.photo}\r\n            alt={props.data.name}\r\n          ></img>\r\n          <article className='card__article'>\r\n            <h3 className='card__title'>{props.data.name}</h3>\r\n            <ul className='card__detail'>\r\n              <li className='card__detail__status'>Estado: {isAlive()}</li>\r\n              <li className='card__detail__origin'>\r\n                Origen: {props.data.origin}\r\n              </li>\r\n              <li className='card__detail__episodes'>\r\n                Episodios: {props.data.episodes}{' '}\r\n              </li>\r\n              <li className='CardClose'>\r\n                <Link to='/' className='CardClose__link'>\r\n                  Volver\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </article>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default CardDetail;\r\n","import '../styles/App.scss';\nimport '../styles/List.scss';\nimport { useEffect, useState } from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport initialData from '../services/api';\nimport Header from './Header';\nimport List from './List';\nimport CardDetail from './CardDetail';\nimport DoesNotExist from './DoesNotExist';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [userSearch, setUserSearch] = useState('');\n\n  useEffect(() => {\n    initialData().then((response) => {\n      setData(response);\n    });\n  }, []);\n\n  const handleSearch = (value) => {\n    setUserSearch(value);\n  };\n\n  const routeData = useRouteMatch('/card/:id');\n  const cardId = routeData !== null ? parseInt(routeData.params.id) : ''; //me da el id clickado\n\n  const selectCard = data.find((card) => card.id === cardId);\n\n  const filteredList = data\n    .filter((eachCharacter) =>\n      eachCharacter.name\n        .toLocaleLowerCase()\n        .includes(userSearch.toLocaleLowerCase())\n    )\n    .sort((a, b) => {\n      if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n        return -1;\n      }\n      if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n\n  return (\n    <div>\n      <Header />\n      <main>\n        <Switch>\n          <Route path='/card/:id'>\n            <CardDetail data={selectCard} />\n          </Route>\n          <Route path='/' exact>\n            <List\n              handleSearch={handleSearch}\n              dataSearch={userSearch}\n              data={filteredList}\n              userSearch={userSearch}\n            />\n          </Route>\n          <Route>\n            <DoesNotExist />\n          </Route>\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}