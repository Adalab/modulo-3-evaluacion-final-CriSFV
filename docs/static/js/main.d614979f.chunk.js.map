{"version":3,"sources":["services/api.js","images/logo.png","components/Header.js","components/Card.js","images/triste.jpg","components/DoesNotExistCharacter.js","components/List.js","components/DoesNotExist.js","components/CardDetail.js","components/FilterName.js","components/FilterAlive.js","components/Filters.js","components/App.js","index.js"],"names":["CallToApis","CallToApi","fetch","then","response","json","results","map","character","name","photo","image","species","id","origin","location","episodes","episode","length","status","pages","pageNumber","BringInfo","data","count","info","next","prev","Header","className","src","logo","alt","Cards","props","to","eachData","DoesNotExistCharacter","triste","onClick","ev","preventDefault","window","reload","List","Card","DoesNotExist","CardDetail","undefined","isAlive","FilterName","type","placeholder","value","userSearch","onChange","handleSearch","currentTarget","FilterisAlive","htmlFor","userSearchStatus","handleSearchStatus","Filters","App","useState","setData","setUserSearch","setUserSearchStatus","useEffect","initialData","routeData","useRouteMatch","cardId","parseInt","params","selectCard","find","card","filteredList","filter","eachCharacter","toLocaleLowerCase","includes","sort","a","b","path","exact","onSubmit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d614979f.chunk.js","sourcesContent":["//https://rickandmortyapi.com/api/character\r\n//https://rickandmortyapi.com/api/character/?page=${pageNumber}\r\n\r\nconst CallToApi = () => {\r\n  return fetch(\r\n    'https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json'\r\n  )\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      return response.results.map((character) => {\r\n        return {\r\n          name: character.name,\r\n          photo: character.image,\r\n          species: character.species,\r\n          id: character.id,\r\n          origin: character.location.name,\r\n          episodes: character.episode.length,\r\n          status: character.status,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nconst BringInfo = () => {\r\n  return fetch('https://rickandmortyapi.com/api/character/?page=1')\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return {\r\n        count: data.info.count,\r\n        pages: data.info.pages,\r\n        next: data.info.next,\r\n        prev: data.info.prev,\r\n      };\r\n    });\r\n};\r\n\r\nconst pages = (pageNumber) => {\r\n  if (pageNumber !== null) {\r\n    return fetch(\r\n      `https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json?page=${pageNumber}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        return response.results.map((character) => {\r\n          return {\r\n            name: character.name,\r\n            photo: character.image,\r\n            species: character.species,\r\n            id: character.id,\r\n            origin: character.location.name,\r\n            episodes: character.episode.length,\r\n            status: character.status,\r\n          };\r\n        });\r\n      });\r\n  }\r\n};\r\n\r\nconst CallToApis = {\r\n  CallToApi: CallToApi,\r\n  pages: pages,\r\n  BringInfo: BringInfo,\r\n};\r\nexport default CallToApis;\r\n","export default __webpack_public_path__ + \"static/media/logo.de13d484.png\";","import '../styles/Header.scss';\r\nimport logo from '../images/logo.png';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className='header'>\r\n      <img src={logo} alt='Rick and Morty' className='header__img' />\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nconst Cards = (props) => {\r\n  return (\r\n    <>\r\n      <Link to={`/card/${props.eachData.id}`} className='character'>\r\n        <img\r\n          className='list__character__img'\r\n          src={props.eachData.photo}\r\n          alt={props.eachData.name}\r\n        />\r\n        <h4 className='list__character__name '>{props.eachData.name}</h4>\r\n        <p className='list__character__rest '>{props.eachData.species}</p>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nCards.propTypes = {\r\n  eachData: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Cards;\r\n","export default __webpack_public_path__ + \"static/media/triste.39ad1b25.jpg\";","import triste from '../images/triste.jpg';\r\nimport '../styles/DoesNotExist.scss';\r\n\r\nconst DoesNotExistCharacter = () => {\r\n  const handleClickReload = (ev) => {\r\n    ev.preventDefault();\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className='sad'>\r\n        <p className='sad__text'>\r\n          ¡¿¡¿No ves que el personaje que estás buscando no existe?!?!\r\n        </p>\r\n\r\n        <img src={triste} alt='Triste' />\r\n\r\n        <button className='sad__button' onClick={handleClickReload}>\r\n          Volver\r\n        </button>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nexport default DoesNotExistCharacter;\r\n","import '../styles/List.scss';\r\nimport PropTypes from 'prop-types';\r\nimport Cards from './Card';\r\nimport DoesNotExistCharacter from './DoesNotExistCharacter';\r\n\r\nconst List = (props) => {\r\n  const printList = () =>\r\n    props.data.map((eachData) => {\r\n      return (\r\n        <li className='list__character' key={eachData.id}>\r\n          <Cards eachData={eachData} />\r\n        </li>\r\n      );\r\n    });\r\n  if (props.data.length === 0) {\r\n    return <DoesNotExistCharacter />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <ul className='list'>{printList()}</ul>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nList.propTypes = {\r\n  data: PropTypes.array,\r\n  userSearch: PropTypes.string,\r\n  userSearchStatus: PropTypes.string,\r\n  handleSearch: PropTypes.func.isRequired,\r\n  handleSearchStatus: PropTypes.func.isRequired,\r\n};\r\nexport default List;\r\n","import { Link } from 'react-router-dom';\r\nimport triste from '../images/triste.jpg';\r\nimport '../styles/DoesNotExist.scss';\r\nconst DoesNotExist = () => {\r\n  return (\r\n    <section className='sad'>\r\n      <p className='sad__text'>¡¿¡¿No ves que lo que buscas no existe?!?!</p>\r\n      <img src={triste} alt='Triste' />\r\n      <Link to='/' className='sad__button'>\r\n        Volver\r\n      </Link>\r\n    </section>\r\n  );\r\n};\r\nexport default DoesNotExist;\r\n","import PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/CardDetail.scss';\r\nimport DoesNotExist from './DoesNotExist';\r\n\r\nconst CardDetail = (props) => {\r\n  const wichtSpecie = () => {\r\n    if (props.data.species === 'Human') {\r\n      return <i className='fas fa-baby'></i>;\r\n    } else if (props.data.species === 'Alien') {\r\n      return <i className='fab fa-reddit-alien'></i>;\r\n    }\r\n  };\r\n\r\n  const isAlive = () => {\r\n    if (props.data.status === 'Dead') {\r\n      return <i className='fas fa-skull-crossbones'></i>;\r\n    }\r\n  };\r\n\r\n  if (props.data === undefined) {\r\n    return <DoesNotExist />;\r\n  }\r\n  return (\r\n    <>\r\n      <div className='div'>\r\n        <section className='card'>\r\n          <img\r\n            className='list__character__img'\r\n            src={props.data.photo}\r\n            alt={props.data.name}\r\n          ></img>\r\n          <article className='card__article'>\r\n            <h3 className='card__title'>{props.data.name}</h3>\r\n            <ul className='card__detail'>\r\n              <li>Origen: {props.data.origin}</li>\r\n              <li>{props.data.species}</li>\r\n              <li>Episodios: {props.data.episodes}</li>\r\n              <li className='CardClose'>\r\n                <Link to='/' className='CardClose__link'>\r\n                  Volver\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </article>\r\n          <article className='card__icons'>\r\n            <aside className='card__icon'>{wichtSpecie()}</aside>\r\n            <aside className='card__icon'>{isAlive()}</aside>\r\n          </article>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nCardDetail.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\nexport default CardDetail;\r\n","import '../styles/Filter.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FilterName = (props) => {\r\n  const inputValue = (ev) => {\r\n    props.handleSearch(ev.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label>\r\n        <input\r\n          type='text'\r\n          className='filter__input'\r\n          placeholder='Busca aquí tu personaje'\r\n          value={props.userSearch}\r\n          onChange={inputValue}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\nFilterName.propTypes = {\r\n  userSearch: PropTypes.string,\r\n  handleSearch: PropTypes.func.isRequired,\r\n};\r\nexport default FilterName;\r\n","import '../styles/Filter.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FilterisAlive = (props) => {\r\n  const optionValue = (ev) => {\r\n    props.handleSearchStatus(ev.currentTarget.value);\r\n  };\r\n  return (\r\n    <>\r\n      <label htmlFor='status' className='filter__status'>\r\n        Estado:{' '}\r\n        <select\r\n          className='filter__status__select'\r\n          name='status'\r\n          id='status'\r\n          value={props.userSearchStatus}\r\n          onChange={optionValue}\r\n        >\r\n          <option value='all'>Todos</option>\r\n          <option value='Alive'>Vivos</option>\r\n          <option value='Dead'>Muertos</option>\r\n          <option value='unknown'>No se sabe</option>\r\n        </select>\r\n      </label>\r\n    </>\r\n  );\r\n};\r\nFilterisAlive.propTypes = {\r\n  userSearchStatus: PropTypes.string,\r\n  handleSearchStatus: PropTypes.func.isRequired,\r\n};\r\nexport default FilterisAlive;\r\n","import PropTypes from 'prop-types';\r\nimport FilterName from './FilterName';\r\nimport FilterIsAlive from './FilterAlive';\r\n\r\nconst Filters = (props) => {\r\n  return (\r\n    <>\r\n      <FilterName\r\n        handleSearch={props.handleSearch}\r\n        userSearch={props.userSearch}\r\n      />\r\n      <FilterIsAlive\r\n        handleSearchStatus={props.handleSearchStatus}\r\n        userSearchStatus={props.userSearchStatus}\r\n      />\r\n    </>\r\n  );\r\n};\r\nFilters.propTypes = {\r\n  userSearch: PropTypes.string,\r\n  userSearchStatus: PropTypes.string,\r\n  handleSearch: PropTypes.func.isRequired,\r\n  handleSearchStatus: PropTypes.func.isRequired,\r\n};\r\nexport default Filters;\r\n","import '../styles/App.scss';\n\nimport { useEffect, useState } from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport initialData from '../services/api';\nimport Header from './Header';\nimport List from './List';\nimport CardDetail from './CardDetail';\nimport DoesNotExist from './DoesNotExist';\nimport Filters from './Filters';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [userSearch, setUserSearch] = useState('');\n  const [userSearchStatus, setUserSearchStatus] = useState('all');\n\n  useEffect(() => {\n    initialData.CallToApi().then((response) => {\n      setData(response);\n    });\n  }, []);\n\n  const hanlePrevent = (ev) => {\n    ev.preventDefault();\n  };\n\n  const handleSearch = (value) => {\n    setUserSearch(value);\n  };\n\n  const handleSearchStatus = (value) => {\n    setUserSearchStatus(value);\n  };\n\n  const routeData = useRouteMatch('/card/:id');\n  const cardId = routeData !== null ? parseInt(routeData.params.id) : '';\n\n  const selectCard = data.find((card) => card.id === cardId);\n\n  const filteredList = data\n    .filter((eachCharacter) =>\n      eachCharacter.name\n        .toLocaleLowerCase()\n        .includes(userSearch.toLocaleLowerCase())\n    )\n\n    .filter(\n      (eachCharacter) =>\n        userSearchStatus === 'all' || userSearchStatus === eachCharacter.status\n    )\n    .sort((a, b) => {\n      if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n        return -1;\n      }\n      if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n\n  return (\n    <div>\n      <Header />\n      <main>\n        <Switch>\n          <Route path='/card/:id'>\n            <CardDetail data={selectCard} />\n          </Route>\n          <Route path='/' exact>\n            <section>\n              <form className='filter' onSubmit={hanlePrevent}>\n                <Filters\n                  handleSearch={handleSearch}\n                  userSearch={userSearch}\n                  handleSearchStatus={handleSearchStatus}\n                  userSearchStatus={userSearchStatus}\n                />\n              </form>\n            </section>\n            <List\n              handleSearch={handleSearch}\n              data={filteredList}\n              userSearch={userSearch}\n              handleSearchStatus={handleSearchStatus}\n              userSearchStatus={userSearchStatus}\n            />\n          </Route>\n          <Route>\n            <DoesNotExist />\n          </Route>\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}